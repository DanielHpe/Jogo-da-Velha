/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ia.jogodavelha;

import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author danih
 */
public class Jogo extends javax.swing.JFrame {

    private String UserType, CPUType;
    private String[][] tabuleiro = new String[3][3];
    private Boolean jaJogou;
    private int contador = 0;

    Random jogadaAleatoria = new Random();

    /**
     * Creates new form Jogo
     */
    public Jogo(String UserType) {
        initComponents();
        this.UserType = UserType;

        if (this.UserType.equals("O")) {
            CPUType = "X";
        } else {
            CPUType = "O";
        }

        novoJogo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnL0C0 = new javax.swing.JButton();
        jBtnL0C1 = new javax.swing.JButton();
        jBtnL0C2 = new javax.swing.JButton();
        jBtnL1C0 = new javax.swing.JButton();
        jBtnL1C1 = new javax.swing.JButton();
        jBtnL1C2 = new javax.swing.JButton();
        jBtnL2C0 = new javax.swing.JButton();
        jBtnL2C1 = new javax.swing.JButton();
        jBtnL2C2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jlblResultado = new javax.swing.JLabel();
        jBtJogar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo da Velha");
        setBackground(new java.awt.Color(204, 204, 255));

        jBtnL0C0.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL0C0.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL0C0.setBorder(null);
        jBtnL0C0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL0C0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL0C0ActionPerformed(evt);
            }
        });

        jBtnL0C1.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL0C1.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL0C1.setBorder(null);
        jBtnL0C1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL0C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL0C1ActionPerformed(evt);
            }
        });

        jBtnL0C2.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL0C2.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL0C2.setBorder(null);
        jBtnL0C2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL0C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL0C2ActionPerformed(evt);
            }
        });

        jBtnL1C0.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL1C0.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL1C0.setBorder(null);
        jBtnL1C0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL1C0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL1C0ActionPerformed(evt);
            }
        });

        jBtnL1C1.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL1C1.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL1C1.setBorder(null);
        jBtnL1C1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL1C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL1C1ActionPerformed(evt);
            }
        });

        jBtnL1C2.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL1C2.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL1C2.setBorder(null);
        jBtnL1C2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL1C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL1C2ActionPerformed(evt);
            }
        });

        jBtnL2C0.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL2C0.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL2C0.setBorder(null);
        jBtnL2C0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL2C0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL2C0ActionPerformed(evt);
            }
        });

        jBtnL2C1.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL2C1.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL2C1.setBorder(null);
        jBtnL2C1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL2C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL2C1ActionPerformed(evt);
            }
        });

        jBtnL2C2.setBackground(new java.awt.Color(255, 255, 255));
        jBtnL2C2.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jBtnL2C2.setBorder(null);
        jBtnL2C2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnL2C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnL2C2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultado");

        jlblResultado.setFont(new java.awt.Font("Kristen ITC", 1, 36)); // NOI18N
        jlblResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblResultado.setText("VocÃª ganhou!");

        jBtJogar.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jBtJogar.setText("Jogar Novamente");
        jBtJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtJogarActionPerformed(evt);
            }
        });

        jBtSair.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnL0C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL0C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL0C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnL2C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL2C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL2C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnL1C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL1C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jBtnL1C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jBtJogar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnL0C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL0C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL0C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnL1C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL1C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL1C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnL2C0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL2C1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnL2C2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtJogar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnL0C0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL0C0ActionPerformed
        if (jBtnL0C0.getText().isEmpty()) {
            jBtnL0C0.setText(UserType);
            tabuleiro[0][0] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL0C0ActionPerformed

    private void jBtnL0C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL0C1ActionPerformed
        if (jBtnL0C1.getText().isEmpty()) {
            jBtnL0C1.setText(UserType);
            tabuleiro[0][1] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL0C1ActionPerformed

    private void jBtnL0C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL0C2ActionPerformed
        if (jBtnL0C2.getText().isEmpty()) {
            jBtnL0C2.setText(UserType);
            tabuleiro[0][2] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL0C2ActionPerformed

    private void jBtnL1C0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL1C0ActionPerformed
        if (jBtnL1C0.getText().isEmpty()) {
            jBtnL1C0.setText(UserType);
            tabuleiro[1][0] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL1C0ActionPerformed

    private void jBtnL1C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL1C1ActionPerformed
        if (jBtnL1C1.getText().isEmpty()) {
            jBtnL1C1.setText(UserType);
            tabuleiro[1][1] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL1C1ActionPerformed

    private void jBtnL1C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL1C2ActionPerformed
        if (jBtnL1C2.getText().isEmpty()) {
            jBtnL1C2.setText(UserType);
            tabuleiro[1][2] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnL1C2ActionPerformed

    private void jBtnL2C0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL2C0ActionPerformed
        if (jBtnL2C0.getText().isEmpty()) {
            jBtnL2C0.setText(UserType);
            tabuleiro[2][0] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jBtnL2C0ActionPerformed

    private void jBtnL2C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL2C1ActionPerformed
        if (jBtnL2C1.getText().isEmpty()) {
            jBtnL2C1.setText(UserType);
            tabuleiro[2][1] = UserType;
            
            Jogar();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_jBtnL2C1ActionPerformed

    private void jBtnL2C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnL2C2ActionPerformed
        if (jBtnL2C2.getText().isEmpty()) {
            jBtnL2C2.setText(UserType.toUpperCase());
            tabuleiro[2][2] = UserType.toUpperCase();
        } else {
            JOptionPane.showMessageDialog(null, "Esse campo jÃ¡ estÃ¡ preenchido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

        Jogar();
    }//GEN-LAST:event_jBtnL2C2ActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Sair", dialogButton, JOptionPane.QUESTION_MESSAGE);
        if (dialogButton == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtJogarActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        JOptionPane.showConfirmDialog(null, "Deseja iniciar um novo jogo?", "Novo Jogo", dialogButton, JOptionPane.QUESTION_MESSAGE);
        if (dialogButton == JOptionPane.YES_OPTION) {
            novoJogo();
        }
    }//GEN-LAST:event_jBtJogarActionPerformed

    /**
     * Sempre apos uma jogada do usuario esse metodo e chamado Ele percorre
     * todas as possiveis combinacoes que iriam finalizar o jogo Tenta bloquear
     * uma finalizacao do oponente E se nao houver nada a ser bloqueado realiza
     * uma jogada aleatoria
     */
    private void Jogar() {
        
        boolean FimDeJogo = false;
        jaJogou = false;
        
        if(contador == 0){
            jogadaAleatoria();
        }
        
        contador++;
        
        // VITÃRIAS
        // LINHAS
        FimDeJogo = tentaVitoriaLinha(0);
        FimDeJogo = tentaVitoriaLinha(1);
        FimDeJogo = tentaVitoriaLinha(2);
        
        // COLUNAS
        FimDeJogo = tentaVitoriaColuna(0);
        FimDeJogo = tentaVitoriaColuna(1);
        FimDeJogo = tentaVitoriaColuna(2);
        
        // DIAGONAIS
        FimDeJogo = tentaVitoriaDiagonal(true);
        FimDeJogo = tentaVitoriaDiagonal(false);
        
        // BLOQUEIOS
        // LINHAS
        FimDeJogo = tentaBloqueioLinha(0);
        FimDeJogo = tentaBloqueioLinha(1);
        FimDeJogo = tentaBloqueioLinha(2);
        
        // COLUNAS
        FimDeJogo = tentaBloqueioColuna(0);
        FimDeJogo = tentaBloqueioColuna(1);
        FimDeJogo = tentaBloqueioColuna(2);
        
        // DIAGONAIS
        FimDeJogo = tentaBloqueioDiagonal(true);
        FimDeJogo = tentaBloqueioDiagonal(false);
        
        
        if (!FimDeJogo) {
            if (verificaVelha()) {
                jlblResultado.setText("Velha!");
                bloqueiaTabuleiro();
            } else {
                if (!jaJogou) {
                    jogadaAleatoria();
                }
            }
        }

    }

    private boolean tentaVitoriaDiagonal(boolean isDiagonalPrimaria) {
    	if (isDiagonalPrimaria) {
    		if (!fimDeJogo(tabuleiro[0][0], tabuleiro[1][1], tabuleiro[2][2])) {
                if ((verificaVitoria(tabuleiro[0][0], tabuleiro[1][1], tabuleiro[2][2])) && (!jaJogou)) {
                    if (tabuleiro[0][0].equals("K")) {
                        realizaJogada(0, 0);
                    } else if (tabuleiro[1][1].equals("K")) {
                        realizaJogada(1, 1);
                    } else if (tabuleiro[2][2].equals("K")) {
                        realizaJogada(2, 2);
                    }
                    fimDeJogo(tabuleiro[0][0], tabuleiro[1][1], tabuleiro[2][2]);
                }
            } else {
                return true;
            }
    	} else {
    		if (!fimDeJogo(tabuleiro[0][2], tabuleiro[1][1], tabuleiro[2][0])) {
                if ((verificaVitoria(tabuleiro[0][2], tabuleiro[1][1], tabuleiro[2][0])) && (!jaJogou)) {
                    if (tabuleiro[0][2].equals("K")) {
                        realizaJogada(0, 2);
                    } else if (tabuleiro[1][1].equals("K")) {
                        realizaJogada(1, 1);
                    } else if (tabuleiro[2][0].equals("K")) {
                        realizaJogada(2, 0);
                    }
                    fimDeJogo(tabuleiro[0][2], tabuleiro[1][1], tabuleiro[2][0]);
                }
            } else {
                return true;
            }
    	}
    	
		return false;
	}

	private boolean tentaBloqueioDiagonal(boolean isDiagonalPrimaria) {
		if (isDiagonalPrimaria) {
    		if (!fimDeJogo(tabuleiro[0][0], tabuleiro[1][1], tabuleiro[2][2])) {
                if ((bloqueiaOponente(tabuleiro[0][0], tabuleiro[1][1], tabuleiro[2][2])) && (!jaJogou)) {
                    if (tabuleiro[0][0].equals("K")) {
                        realizaJogada(0, 0);
                    } else if (tabuleiro[1][1].equals("K")) {
                        realizaJogada(1, 1);
                    } else if (tabuleiro[2][2].equals("K")) {
                        realizaJogada(2, 2);
                    }
                }
            } else {
                return true;
            }
    	} else {
    		if (!fimDeJogo(tabuleiro[0][2], tabuleiro[1][1], tabuleiro[2][0])) {
                if ((bloqueiaOponente(tabuleiro[0][2], tabuleiro[1][1], tabuleiro[2][0])) && (!jaJogou)) {
                    if (tabuleiro[0][2].equals("K")) {
                        realizaJogada(0, 2);
                    } else if (tabuleiro[1][1].equals("K")) {
                        realizaJogada(1, 1);
                    } else if (tabuleiro[2][0].equals("K")) {
                        realizaJogada(2, 0);
                    }
                }
            } else {
                return true;
            }
    	}
		return false;
	}

	private boolean tentaBloqueioColuna(int numColuna) {
		if (!fimDeJogo(tabuleiro[0][numColuna], tabuleiro[1][numColuna], tabuleiro[2][numColuna])) {
            if ((bloqueiaOponente(tabuleiro[0][numColuna], tabuleiro[1][numColuna], tabuleiro[2][numColuna])) && (!jaJogou)) {
                if (tabuleiro[0][numColuna].equals("K")) {
                    realizaJogada(0, numColuna);
                } else if (tabuleiro[1][numColuna].equals("K")) {
                    realizaJogada(1, numColuna);
                } else if (tabuleiro[2][numColuna].equals("K")) {
                    realizaJogada(2, numColuna);
                }
            }
        } else {
            return true;
        }
		
		return false;
	}

	private boolean tentaBloqueioLinha(int numLinha) {
		if (!fimDeJogo(tabuleiro[numLinha][0], tabuleiro[numLinha][1], tabuleiro[numLinha][2])) {
            if ((bloqueiaOponente(tabuleiro[numLinha][0], tabuleiro[numLinha][1], tabuleiro[numLinha][2])) && (!jaJogou)) {
                if (tabuleiro[numLinha][0].equals("K")) {
                    realizaJogada(numLinha, 0);
                } else if (tabuleiro[numLinha][1].equals("K")) {
                    realizaJogada(numLinha, 1);
                } else if (tabuleiro[numLinha][2].equals("K")) {
                    realizaJogada(numLinha, 2);
                }
            }
        } else {
            return true;
        }
		
		return false;
	}

	private boolean tentaVitoriaColuna(int numColuna) {
		if (!fimDeJogo(tabuleiro[0][numColuna], tabuleiro[1][numColuna], tabuleiro[2][numColuna])) {
            if ((verificaVitoria(tabuleiro[0][numColuna], tabuleiro[1][numColuna], tabuleiro[2][numColuna])) && (!jaJogou)) {
                if (tabuleiro[0][numColuna].equals("K")) {
                    realizaJogada(0, numColuna);
                } else if (tabuleiro[1][numColuna].equals("K")) {
                    realizaJogada(1, numColuna);
                } else if (tabuleiro[2][numColuna].equals("K")) {
                    realizaJogada(2, numColuna);
                }
                fimDeJogo(tabuleiro[0][numColuna], tabuleiro[1][numColuna], tabuleiro[2][numColuna]);
            }
        } else {
            return true;
        }
		
		return false;
	}

	private boolean tentaVitoriaLinha(int numLinha) {
		if (!fimDeJogo(tabuleiro[numLinha][0], tabuleiro[numLinha][1], tabuleiro[numLinha][2])) {
            if ((verificaVitoria(tabuleiro[numLinha][0], tabuleiro[numLinha][1], tabuleiro[numLinha][2])) && (!jaJogou)) {
                if (tabuleiro[numLinha][0].equals("K")) {
                    realizaJogada(numLinha, 0);
                } else if (tabuleiro[0][1].equals("K")) {
                    realizaJogada(numLinha, 1);
                } else if (tabuleiro[0][2].equals("K")) {
                    realizaJogada(numLinha, 2);
                }
                fimDeJogo(tabuleiro[numLinha][0], tabuleiro[numLinha][1], tabuleiro[numLinha][2]);
            }
        } else {
            return true;
        }
		
		return false;
	}

	/**
     * Bloqueia o tabuleiro no fim do jogo
     *
     * Impede que o usuario continue jogando se o jogo acabar Fazendo com que
     * ele seja forcao a pedir um novo jogo
     *
     */
    private void bloqueiaTabuleiro() {
        jBtnL0C0.setEnabled(false);
        jBtnL0C1.setEnabled(false);
        jBtnL0C2.setEnabled(false);
        jBtnL1C0.setEnabled(false);
        jBtnL1C1.setEnabled(false);
        jBtnL1C2.setEnabled(false);
        jBtnL2C0.setEnabled(false);
        jBtnL2C1.setEnabled(false);
        jBtnL2C2.setEnabled(false);
    }

    /**
     * Libera o tabuleiro quando um novo jogo e iniciado
     *
     * Quando o usuario pede um novo jogo ou quando o programa e iniciado
     *
     */
    private void liberaTabuleiro() {
        jBtnL0C0.setEnabled(true);
        jBtnL0C1.setEnabled(true);
        jBtnL0C2.setEnabled(true);
        jBtnL1C0.setEnabled(true);
        jBtnL1C1.setEnabled(true);
        jBtnL1C2.setEnabled(true);
        jBtnL2C0.setEnabled(true);
        jBtnL2C1.setEnabled(true);
        jBtnL2C2.setEnabled(true);
    }

    /**
     * Verifica se o o tabuleiro ja esta todo preenchido sem nenhuma combinacao
     *
     * @return Se tiver dado velha, ou seja, nao existir nenhuma combinacao com
     * 3 campos consecutivos do mesmo usuario
     *
     */
    private Boolean verificaVelha() {
        Boolean velha = true;

        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (tabuleiro[i][j].equals("K")) {
                    velha = false;
                }
            }
        }

        return velha;
    }

    /**
     * Verifica se a CPU ou o Usuario ganhou
     *
     * @param campo1
     * @param campo2
     * @param campo3
     *
     * @return True se existir 3 campos iguais na mesma linha/coluna/diagonal e
     * preenche o jlblResultado com o resultado
     *
     */
    private Boolean fimDeJogo(String campo1, String campo2, String campo3) {
        if ((campo1.equals(campo2) && campo1.equals(campo3)) && (!campo1.equals("K"))) {
            if (campo1.equals(UserType)) {
                jlblResultado.setText("VocÃª Ganhou!");
            } else {
                jlblResultado.setText("A CPU Ganhou!");
            }
            bloqueiaTabuleiro();
            return true;
        } else {
            return false;
        }
    }
    
    private boolean verificaVitoria(String campo1, String campo2, String campo3) {
        String jogada = campo1 + campo2 + campo3;
        return jogada.contains(CPUType + CPUType) || jogada.equals(CPUType + "K" + CPUType);
    }
    
    /**
     * Verifica se existe alguma jogada do oponente para bloquear, com objetivo
     * dele nao conseguir fazer velha
     *
     * @param campo1
     * @param campo2
     * @param campo3
     *
     * @return True se houver naquela combinacao 2 campos ja preenchidos pelo
     * usuario
     *
     */
    private Boolean bloqueiaOponente(String campo1, String campo2, String campo3) {
        String jogada = campo1 + campo2 + campo3;
        System.out.println(jogada);
        return jogada.contains(UserType + UserType) || jogada.equals(UserType + "K" + UserType);
    }

    /**
     * Realiza jogada da CPU em linha/coluna especifica Preenche o tabuleiro na
     * posicao com o tipo da CPU Preenche o campo da jogada na tela
     *
     * @param linha
     * @param coluna
     *
     */
    private void realizaJogada(int linha, int coluna) {

        String posicao = String.valueOf(linha) + String.valueOf(coluna);
        // PREENCHE O TABULEIRO
        tabuleiro[linha][coluna] = CPUType;
        // MOSTRA JOGADA NA TELA
        switch (posicao) {
            case "00":
                jBtnL0C0.setText(CPUType);
                break;
            case "01":
                jBtnL0C1.setText(CPUType);
                break;
            case "02":
                jBtnL0C2.setText(CPUType);
                break;
            case "10":
                jBtnL1C0.setText(CPUType);
                break;
            case "11":
                jBtnL1C1.setText(CPUType);
                break;
            case "12":
                jBtnL1C2.setText(CPUType);
                break;
            case "20":
                jBtnL2C0.setText(CPUType);
                break;
            case "21":
                jBtnL2C1.setText(CPUType);
                break;
            case "22":
                jBtnL2C2.setText(CPUType);
                break;
        }

        jaJogou = true;
    }

    /**
     * Realiza uma jogada aleatoria em um campo vazio do tabuleiro
     *
     * Esse metodos so sera chamado se nao tiver nenhuma jogada do oponente para
     * bloquear
     *
     */
    private void jogadaAleatoria() {
        int linha, coluna;

        while (!jaJogou) {
            linha = jogadaAleatoria.nextInt(3);
            coluna = jogadaAleatoria.nextInt(3);
            if (tabuleiro[linha][coluna].equals("K")) {
                realizaJogada(linha, coluna);
            }
        }

    }

    /**
     * Prepara o tabuleiro e tela para um novo jogo
     *
     *
     */
    private void novoJogo() {
        // LIBERA O TABULEIRO PARA JOGAR
        liberaTabuleiro();

        // LIMPA O RESULTADO
        jlblResultado.setText("");

        // INICIALIZA O TABULEIRO COM "K"
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                tabuleiro[i][j] = "K";
            }
        }

        // LIMPA TODOS OS BOTOES
        jBtnL0C0.setText("");
        jBtnL0C1.setText("");
        jBtnL0C2.setText("");
        jBtnL1C0.setText("");
        jBtnL1C1.setText("");
        jBtnL1C2.setText("");
        jBtnL2C0.setText("");
        jBtnL2C1.setText("");
        jBtnL2C2.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String user;
                user = JOptionPane.showInputDialog(null, "Escolha 'X' ou 'O' para continuar:\nDigite qualquer outro caracter para sair.", "Iniciar Jogo da Velha", JOptionPane.QUESTION_MESSAGE);
                if (user.toUpperCase().equals("X") || user.toUpperCase().equals("O")) {
                    new Jogo(user.toUpperCase()).setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtJogar;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtnL0C0;
    private javax.swing.JButton jBtnL0C1;
    private javax.swing.JButton jBtnL0C2;
    private javax.swing.JButton jBtnL1C0;
    private javax.swing.JButton jBtnL1C1;
    private javax.swing.JButton jBtnL1C2;
    private javax.swing.JButton jBtnL2C0;
    private javax.swing.JButton jBtnL2C1;
    private javax.swing.JButton jBtnL2C2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlblResultado;
    // End of variables declaration//GEN-END:variables



}
